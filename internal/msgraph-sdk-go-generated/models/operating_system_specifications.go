// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type OperatingSystemSpecifications struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The OdataType property
    odataType *string
    // The platform of the operating system (for example, 'Windows').
    operatingSystemPlatform *string
    // The version string of the operating system.
    operatingSystemVersion *string
}
// NewOperatingSystemSpecifications instantiates a new OperatingSystemSpecifications and sets the default values.
func NewOperatingSystemSpecifications()(*OperatingSystemSpecifications) {
    m := &OperatingSystemSpecifications{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateOperatingSystemSpecificationsFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateOperatingSystemSpecificationsFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewOperatingSystemSpecifications(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *OperatingSystemSpecifications) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *OperatingSystemSpecifications) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["@odata.type"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOdataType(val)
        }
        return nil
    }
    res["operatingSystemPlatform"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOperatingSystemPlatform(val)
        }
        return nil
    }
    res["operatingSystemVersion"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOperatingSystemVersion(val)
        }
        return nil
    }
    return res
}
// GetOdataType gets the @odata.type property value. The OdataType property
// returns a *string when successful
func (m *OperatingSystemSpecifications) GetOdataType()(*string) {
    return m.odataType
}
// GetOperatingSystemPlatform gets the operatingSystemPlatform property value. The platform of the operating system (for example, 'Windows').
// returns a *string when successful
func (m *OperatingSystemSpecifications) GetOperatingSystemPlatform()(*string) {
    return m.operatingSystemPlatform
}
// GetOperatingSystemVersion gets the operatingSystemVersion property value. The version string of the operating system.
// returns a *string when successful
func (m *OperatingSystemSpecifications) GetOperatingSystemVersion()(*string) {
    return m.operatingSystemVersion
}
// Serialize serializes information the current object
func (m *OperatingSystemSpecifications) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteStringValue("@odata.type", m.GetOdataType())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("operatingSystemPlatform", m.GetOperatingSystemPlatform())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("operatingSystemVersion", m.GetOperatingSystemVersion())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *OperatingSystemSpecifications) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetOdataType sets the @odata.type property value. The OdataType property
func (m *OperatingSystemSpecifications) SetOdataType(value *string)() {
    m.odataType = value
}
// SetOperatingSystemPlatform sets the operatingSystemPlatform property value. The platform of the operating system (for example, 'Windows').
func (m *OperatingSystemSpecifications) SetOperatingSystemPlatform(value *string)() {
    m.operatingSystemPlatform = value
}
// SetOperatingSystemVersion sets the operatingSystemVersion property value. The version string of the operating system.
func (m *OperatingSystemSpecifications) SetOperatingSystemVersion(value *string)() {
    m.operatingSystemVersion = value
}
type OperatingSystemSpecificationsable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetOdataType()(*string)
    GetOperatingSystemPlatform()(*string)
    GetOperatingSystemVersion()(*string)
    SetOdataType(value *string)()
    SetOperatingSystemPlatform(value *string)()
    SetOperatingSystemVersion(value *string)()
}
