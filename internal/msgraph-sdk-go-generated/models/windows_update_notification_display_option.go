// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
// Windows Update Notification Display Options
type WindowsUpdateNotificationDisplayOption int

const (
    // Not configured
    NOTCONFIGURED_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION WindowsUpdateNotificationDisplayOption = iota
    // Use the default Windows Update notifications.
    DEFAULTNOTIFICATIONS_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
    // Turn off all notifications, excluding restart warnings.
    RESTARTWARNINGSONLY_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
    // Turn off all notifications, including restart warnings.
    DISABLEALLNOTIFICATIONS_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
    // Evolvable enumeration sentinel value. Do not use.
    UNKNOWNFUTUREVALUE_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
)

func (i WindowsUpdateNotificationDisplayOption) String() string {
    return []string{"notConfigured", "defaultNotifications", "restartWarningsOnly", "disableAllNotifications", "unknownFutureValue"}[i]
}
func ParseWindowsUpdateNotificationDisplayOption(v string) (any, error) {
    result := NOTCONFIGURED_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
    switch v {
        case "notConfigured":
            result = NOTCONFIGURED_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
        case "defaultNotifications":
            result = DEFAULTNOTIFICATIONS_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
        case "restartWarningsOnly":
            result = RESTARTWARNINGSONLY_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
        case "disableAllNotifications":
            result = DISABLEALLNOTIFICATIONS_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_WINDOWSUPDATENOTIFICATIONDISPLAYOPTION
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeWindowsUpdateNotificationDisplayOption(values []WindowsUpdateNotificationDisplayOption) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i WindowsUpdateNotificationDisplayOption) isMultiValue() bool {
    return false
}
