// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
// Possible values for internet site security level.
type InternetSiteSecurityLevel int

const (
    // User Defined, default value, no intent.
    USERDEFINED_INTERNETSITESECURITYLEVEL InternetSiteSecurityLevel = iota
    // Medium.
    MEDIUM_INTERNETSITESECURITYLEVEL
    // Medium-High.
    MEDIUMHIGH_INTERNETSITESECURITYLEVEL
    // High.
    HIGH_INTERNETSITESECURITYLEVEL
)

func (i InternetSiteSecurityLevel) String() string {
    return []string{"userDefined", "medium", "mediumHigh", "high"}[i]
}
func ParseInternetSiteSecurityLevel(v string) (any, error) {
    result := USERDEFINED_INTERNETSITESECURITYLEVEL
    switch v {
        case "userDefined":
            result = USERDEFINED_INTERNETSITESECURITYLEVEL
        case "medium":
            result = MEDIUM_INTERNETSITESECURITYLEVEL
        case "mediumHigh":
            result = MEDIUMHIGH_INTERNETSITESECURITYLEVEL
        case "high":
            result = HIGH_INTERNETSITESECURITYLEVEL
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeInternetSiteSecurityLevel(values []InternetSiteSecurityLevel) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i InternetSiteSecurityLevel) isMultiValue() bool {
    return false
}
