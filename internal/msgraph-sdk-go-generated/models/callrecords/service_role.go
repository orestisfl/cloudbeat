// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package callrecords
type ServiceRole int

const (
    UNKNOWN_SERVICEROLE ServiceRole = iota
    CUSTOMBOT_SERVICEROLE
    SKYPEFORBUSINESSMICROSOFTTEAMSGATEWAY_SERVICEROLE
    SKYPEFORBUSINESSAUDIOVIDEOMCU_SERVICEROLE
    SKYPEFORBUSINESSAPPLICATIONSHARINGMCU_SERVICEROLE
    SKYPEFORBUSINESSCALLQUEUES_SERVICEROLE
    SKYPEFORBUSINESSAUTOATTENDANT_SERVICEROLE
    MEDIATIONSERVER_SERVICEROLE
    MEDIATIONSERVERCLOUDCONNECTOREDITION_SERVICEROLE
    EXCHANGEUNIFIEDMESSAGINGSERVICE_SERVICEROLE
    MEDIACONTROLLER_SERVICEROLE
    CONFERENCINGANNOUNCEMENTSERVICE_SERVICEROLE
    CONFERENCINGATTENDANT_SERVICEROLE
    AUDIOTELECONFERENCERCONTROLLER_SERVICEROLE
    SKYPEFORBUSINESSUNIFIEDCOMMUNICATIONAPPLICATIONPLATFORM_SERVICEROLE
    RESPONSEGROUPSERVICEANNOUNCEMENTSERVICE_SERVICEROLE
    GATEWAY_SERVICEROLE
    SKYPETRANSLATOR_SERVICEROLE
    SKYPEFORBUSINESSATTENDANT_SERVICEROLE
    RESPONSEGROUPSERVICE_SERVICEROLE
    VOICEMAIL_SERVICEROLE
    UNKNOWNFUTUREVALUE_SERVICEROLE
)

func (i ServiceRole) String() string {
    return []string{"unknown", "customBot", "skypeForBusinessMicrosoftTeamsGateway", "skypeForBusinessAudioVideoMcu", "skypeForBusinessApplicationSharingMcu", "skypeForBusinessCallQueues", "skypeForBusinessAutoAttendant", "mediationServer", "mediationServerCloudConnectorEdition", "exchangeUnifiedMessagingService", "mediaController", "conferencingAnnouncementService", "conferencingAttendant", "audioTeleconferencerController", "skypeForBusinessUnifiedCommunicationApplicationPlatform", "responseGroupServiceAnnouncementService", "gateway", "skypeTranslator", "skypeForBusinessAttendant", "responseGroupService", "voicemail", "unknownFutureValue"}[i]
}
func ParseServiceRole(v string) (any, error) {
    result := UNKNOWN_SERVICEROLE
    switch v {
        case "unknown":
            result = UNKNOWN_SERVICEROLE
        case "customBot":
            result = CUSTOMBOT_SERVICEROLE
        case "skypeForBusinessMicrosoftTeamsGateway":
            result = SKYPEFORBUSINESSMICROSOFTTEAMSGATEWAY_SERVICEROLE
        case "skypeForBusinessAudioVideoMcu":
            result = SKYPEFORBUSINESSAUDIOVIDEOMCU_SERVICEROLE
        case "skypeForBusinessApplicationSharingMcu":
            result = SKYPEFORBUSINESSAPPLICATIONSHARINGMCU_SERVICEROLE
        case "skypeForBusinessCallQueues":
            result = SKYPEFORBUSINESSCALLQUEUES_SERVICEROLE
        case "skypeForBusinessAutoAttendant":
            result = SKYPEFORBUSINESSAUTOATTENDANT_SERVICEROLE
        case "mediationServer":
            result = MEDIATIONSERVER_SERVICEROLE
        case "mediationServerCloudConnectorEdition":
            result = MEDIATIONSERVERCLOUDCONNECTOREDITION_SERVICEROLE
        case "exchangeUnifiedMessagingService":
            result = EXCHANGEUNIFIEDMESSAGINGSERVICE_SERVICEROLE
        case "mediaController":
            result = MEDIACONTROLLER_SERVICEROLE
        case "conferencingAnnouncementService":
            result = CONFERENCINGANNOUNCEMENTSERVICE_SERVICEROLE
        case "conferencingAttendant":
            result = CONFERENCINGATTENDANT_SERVICEROLE
        case "audioTeleconferencerController":
            result = AUDIOTELECONFERENCERCONTROLLER_SERVICEROLE
        case "skypeForBusinessUnifiedCommunicationApplicationPlatform":
            result = SKYPEFORBUSINESSUNIFIEDCOMMUNICATIONAPPLICATIONPLATFORM_SERVICEROLE
        case "responseGroupServiceAnnouncementService":
            result = RESPONSEGROUPSERVICEANNOUNCEMENTSERVICE_SERVICEROLE
        case "gateway":
            result = GATEWAY_SERVICEROLE
        case "skypeTranslator":
            result = SKYPETRANSLATOR_SERVICEROLE
        case "skypeForBusinessAttendant":
            result = SKYPEFORBUSINESSATTENDANT_SERVICEROLE
        case "responseGroupService":
            result = RESPONSEGROUPSERVICE_SERVICEROLE
        case "voicemail":
            result = VOICEMAIL_SERVICEROLE
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_SERVICEROLE
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeServiceRole(values []ServiceRole) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i ServiceRole) isMultiValue() bool {
    return false
}
