// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
// The storage locations where managed apps can potentially store their data.
type ManagedAppDataStorageLocation int

const (
    // Indicates allowed storage location for the managed app to save files is 'OneDrive for Business'.
    ONEDRIVEFORBUSINESS_MANAGEDAPPDATASTORAGELOCATION ManagedAppDataStorageLocation = iota
    // Indicates allowed storage location for the managed app to save files is 'Sharepoint'.
    SHAREPOINT_MANAGEDAPPDATASTORAGELOCATION
    // Indicates that the allowed storage location for a managed app to save files is to 'Box'. Box is a non-Microsoft solution that enables cloud-based file storage capabilities.
    BOX_MANAGEDAPPDATASTORAGELOCATION
    // Indicates allowed storage location for the managed app to save files is local storage on the device.
    LOCALSTORAGE_MANAGEDAPPDATASTORAGELOCATION
)

func (i ManagedAppDataStorageLocation) String() string {
    return []string{"oneDriveForBusiness", "sharePoint", "box", "localStorage"}[i]
}
func ParseManagedAppDataStorageLocation(v string) (any, error) {
    result := ONEDRIVEFORBUSINESS_MANAGEDAPPDATASTORAGELOCATION
    switch v {
        case "oneDriveForBusiness":
            result = ONEDRIVEFORBUSINESS_MANAGEDAPPDATASTORAGELOCATION
        case "sharePoint":
            result = SHAREPOINT_MANAGEDAPPDATASTORAGELOCATION
        case "box":
            result = BOX_MANAGEDAPPDATASTORAGELOCATION
        case "localStorage":
            result = LOCALSTORAGE_MANAGEDAPPDATASTORAGELOCATION
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeManagedAppDataStorageLocation(values []ManagedAppDataStorageLocation) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i ManagedAppDataStorageLocation) isMultiValue() bool {
    return false
}
