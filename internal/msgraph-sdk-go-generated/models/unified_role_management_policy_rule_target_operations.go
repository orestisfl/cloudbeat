// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type UnifiedRoleManagementPolicyRuleTargetOperations int

const (
    ALL_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS UnifiedRoleManagementPolicyRuleTargetOperations = iota
    ACTIVATE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
    DEACTIVATE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
    ASSIGN_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
    UPDATE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
    REMOVE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
    EXTEND_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
    RENEW_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
    UNKNOWNFUTUREVALUE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
)

func (i UnifiedRoleManagementPolicyRuleTargetOperations) String() string {
    return []string{"all", "activate", "deactivate", "assign", "update", "remove", "extend", "renew", "unknownFutureValue"}[i]
}
func ParseUnifiedRoleManagementPolicyRuleTargetOperations(v string) (any, error) {
    result := ALL_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
    switch v {
        case "all":
            result = ALL_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
        case "activate":
            result = ACTIVATE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
        case "deactivate":
            result = DEACTIVATE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
        case "assign":
            result = ASSIGN_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
        case "update":
            result = UPDATE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
        case "remove":
            result = REMOVE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
        case "extend":
            result = EXTEND_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
        case "renew":
            result = RENEW_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_UNIFIEDROLEMANAGEMENTPOLICYRULETARGETOPERATIONS
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeUnifiedRoleManagementPolicyRuleTargetOperations(values []UnifiedRoleManagementPolicyRuleTargetOperations) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i UnifiedRoleManagementPolicyRuleTargetOperations) isMultiValue() bool {
    return false
}
