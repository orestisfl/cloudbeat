// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
// Contains value for notification status.
type Win32LobAppNotification int

const (
    // Show all notifications.
    SHOWALL_WIN32LOBAPPNOTIFICATION Win32LobAppNotification = iota
    // Only show restart notification and suppress other notifications.
    SHOWREBOOT_WIN32LOBAPPNOTIFICATION
    // Hide all notifications.
    HIDEALL_WIN32LOBAPPNOTIFICATION
)

func (i Win32LobAppNotification) String() string {
    return []string{"showAll", "showReboot", "hideAll"}[i]
}
func ParseWin32LobAppNotification(v string) (any, error) {
    result := SHOWALL_WIN32LOBAPPNOTIFICATION
    switch v {
        case "showAll":
            result = SHOWALL_WIN32LOBAPPNOTIFICATION
        case "showReboot":
            result = SHOWREBOOT_WIN32LOBAPPNOTIFICATION
        case "hideAll":
            result = HIDEALL_WIN32LOBAPPNOTIFICATION
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeWin32LobAppNotification(values []Win32LobAppNotification) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i Win32LobAppNotification) isMultiValue() bool {
    return false
}
