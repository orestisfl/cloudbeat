// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type SensitivityLabel struct {
    Entity
    // The actionSource property
    actionSource *LabelActionSource
    // The autoTooltip property
    autoTooltip *string
    // The description property
    description *string
    // The displayName property
    displayName *string
    // The isDefault property
    isDefault *bool
    // The isEndpointProtectionEnabled property
    isEndpointProtectionEnabled *bool
    // The isScopedToUser property
    isScopedToUser *bool
    // The locale property
    locale *string
    // The name property
    name *string
    // The priority property
    priority *int32
    // The rights property
    rights UsageRightsIncludedable
    // The sublabels property
    sublabels []SensitivityLabelable
    // The toolTip property
    toolTip *string
}
// NewSensitivityLabel instantiates a new SensitivityLabel and sets the default values.
func NewSensitivityLabel()(*SensitivityLabel) {
    m := &SensitivityLabel{
        Entity: *NewEntity(),
    }
    return m
}
// CreateSensitivityLabelFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateSensitivityLabelFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewSensitivityLabel(), nil
}
// GetActionSource gets the actionSource property value. The actionSource property
// returns a *LabelActionSource when successful
func (m *SensitivityLabel) GetActionSource()(*LabelActionSource) {
    return m.actionSource
}
// GetAutoTooltip gets the autoTooltip property value. The autoTooltip property
// returns a *string when successful
func (m *SensitivityLabel) GetAutoTooltip()(*string) {
    return m.autoTooltip
}
// GetDescription gets the description property value. The description property
// returns a *string when successful
func (m *SensitivityLabel) GetDescription()(*string) {
    return m.description
}
// GetDisplayName gets the displayName property value. The displayName property
// returns a *string when successful
func (m *SensitivityLabel) GetDisplayName()(*string) {
    return m.displayName
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *SensitivityLabel) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["actionSource"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseLabelActionSource)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetActionSource(val.(*LabelActionSource))
        }
        return nil
    }
    res["autoTooltip"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAutoTooltip(val)
        }
        return nil
    }
    res["description"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDescription(val)
        }
        return nil
    }
    res["displayName"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDisplayName(val)
        }
        return nil
    }
    res["isDefault"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsDefault(val)
        }
        return nil
    }
    res["isEndpointProtectionEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsEndpointProtectionEnabled(val)
        }
        return nil
    }
    res["isScopedToUser"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsScopedToUser(val)
        }
        return nil
    }
    res["locale"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLocale(val)
        }
        return nil
    }
    res["name"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetName(val)
        }
        return nil
    }
    res["priority"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetPriority(val)
        }
        return nil
    }
    res["rights"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateUsageRightsIncludedFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetRights(val.(UsageRightsIncludedable))
        }
        return nil
    }
    res["sublabels"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateSensitivityLabelFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]SensitivityLabelable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(SensitivityLabelable)
                }
            }
            m.SetSublabels(res)
        }
        return nil
    }
    res["toolTip"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetToolTip(val)
        }
        return nil
    }
    return res
}
// GetIsDefault gets the isDefault property value. The isDefault property
// returns a *bool when successful
func (m *SensitivityLabel) GetIsDefault()(*bool) {
    return m.isDefault
}
// GetIsEndpointProtectionEnabled gets the isEndpointProtectionEnabled property value. The isEndpointProtectionEnabled property
// returns a *bool when successful
func (m *SensitivityLabel) GetIsEndpointProtectionEnabled()(*bool) {
    return m.isEndpointProtectionEnabled
}
// GetIsScopedToUser gets the isScopedToUser property value. The isScopedToUser property
// returns a *bool when successful
func (m *SensitivityLabel) GetIsScopedToUser()(*bool) {
    return m.isScopedToUser
}
// GetLocale gets the locale property value. The locale property
// returns a *string when successful
func (m *SensitivityLabel) GetLocale()(*string) {
    return m.locale
}
// GetName gets the name property value. The name property
// returns a *string when successful
func (m *SensitivityLabel) GetName()(*string) {
    return m.name
}
// GetPriority gets the priority property value. The priority property
// returns a *int32 when successful
func (m *SensitivityLabel) GetPriority()(*int32) {
    return m.priority
}
// GetRights gets the rights property value. The rights property
// returns a UsageRightsIncludedable when successful
func (m *SensitivityLabel) GetRights()(UsageRightsIncludedable) {
    return m.rights
}
// GetSublabels gets the sublabels property value. The sublabels property
// returns a []SensitivityLabelable when successful
func (m *SensitivityLabel) GetSublabels()([]SensitivityLabelable) {
    return m.sublabels
}
// GetToolTip gets the toolTip property value. The toolTip property
// returns a *string when successful
func (m *SensitivityLabel) GetToolTip()(*string) {
    return m.toolTip
}
// Serialize serializes information the current object
func (m *SensitivityLabel) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    if m.GetActionSource() != nil {
        cast := (*m.GetActionSource()).String()
        err = writer.WriteStringValue("actionSource", &cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("autoTooltip", m.GetAutoTooltip())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("description", m.GetDescription())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("displayName", m.GetDisplayName())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteBoolValue("isDefault", m.GetIsDefault())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteBoolValue("isEndpointProtectionEnabled", m.GetIsEndpointProtectionEnabled())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteBoolValue("isScopedToUser", m.GetIsScopedToUser())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("locale", m.GetLocale())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("name", m.GetName())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteInt32Value("priority", m.GetPriority())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteObjectValue("rights", m.GetRights())
        if err != nil {
            return err
        }
    }
    if m.GetSublabels() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetSublabels()))
        for i, v := range m.GetSublabels() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err = writer.WriteCollectionOfObjectValues("sublabels", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("toolTip", m.GetToolTip())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetActionSource sets the actionSource property value. The actionSource property
func (m *SensitivityLabel) SetActionSource(value *LabelActionSource)() {
    m.actionSource = value
}
// SetAutoTooltip sets the autoTooltip property value. The autoTooltip property
func (m *SensitivityLabel) SetAutoTooltip(value *string)() {
    m.autoTooltip = value
}
// SetDescription sets the description property value. The description property
func (m *SensitivityLabel) SetDescription(value *string)() {
    m.description = value
}
// SetDisplayName sets the displayName property value. The displayName property
func (m *SensitivityLabel) SetDisplayName(value *string)() {
    m.displayName = value
}
// SetIsDefault sets the isDefault property value. The isDefault property
func (m *SensitivityLabel) SetIsDefault(value *bool)() {
    m.isDefault = value
}
// SetIsEndpointProtectionEnabled sets the isEndpointProtectionEnabled property value. The isEndpointProtectionEnabled property
func (m *SensitivityLabel) SetIsEndpointProtectionEnabled(value *bool)() {
    m.isEndpointProtectionEnabled = value
}
// SetIsScopedToUser sets the isScopedToUser property value. The isScopedToUser property
func (m *SensitivityLabel) SetIsScopedToUser(value *bool)() {
    m.isScopedToUser = value
}
// SetLocale sets the locale property value. The locale property
func (m *SensitivityLabel) SetLocale(value *string)() {
    m.locale = value
}
// SetName sets the name property value. The name property
func (m *SensitivityLabel) SetName(value *string)() {
    m.name = value
}
// SetPriority sets the priority property value. The priority property
func (m *SensitivityLabel) SetPriority(value *int32)() {
    m.priority = value
}
// SetRights sets the rights property value. The rights property
func (m *SensitivityLabel) SetRights(value UsageRightsIncludedable)() {
    m.rights = value
}
// SetSublabels sets the sublabels property value. The sublabels property
func (m *SensitivityLabel) SetSublabels(value []SensitivityLabelable)() {
    m.sublabels = value
}
// SetToolTip sets the toolTip property value. The toolTip property
func (m *SensitivityLabel) SetToolTip(value *string)() {
    m.toolTip = value
}
type SensitivityLabelable interface {
    Entityable
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetActionSource()(*LabelActionSource)
    GetAutoTooltip()(*string)
    GetDescription()(*string)
    GetDisplayName()(*string)
    GetIsDefault()(*bool)
    GetIsEndpointProtectionEnabled()(*bool)
    GetIsScopedToUser()(*bool)
    GetLocale()(*string)
    GetName()(*string)
    GetPriority()(*int32)
    GetRights()(UsageRightsIncludedable)
    GetSublabels()([]SensitivityLabelable)
    GetToolTip()(*string)
    SetActionSource(value *LabelActionSource)()
    SetAutoTooltip(value *string)()
    SetDescription(value *string)()
    SetDisplayName(value *string)()
    SetIsDefault(value *bool)()
    SetIsEndpointProtectionEnabled(value *bool)()
    SetIsScopedToUser(value *bool)()
    SetLocale(value *string)()
    SetName(value *string)()
    SetPriority(value *int32)()
    SetRights(value UsageRightsIncludedable)()
    SetSublabels(value []SensitivityLabelable)()
    SetToolTip(value *string)()
}
