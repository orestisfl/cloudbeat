// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
// TV content rating labels in New Zealand
type RatingNewZealandTelevisionType int

const (
    // Default value, allow all TV shows content
    ALLALLOWED_RATINGNEWZEALANDTELEVISIONTYPE RatingNewZealandTelevisionType = iota
    // Do not allow any TV shows content
    ALLBLOCKED_RATINGNEWZEALANDTELEVISIONTYPE
    // The G classification excludes materials likely to harm children under 14
    GENERAL_RATINGNEWZEALANDTELEVISIONTYPE
    // The PGR classification encourages parents and guardians to supervise younger viewers
    PARENTALGUIDANCE_RATINGNEWZEALANDTELEVISIONTYPE
    // The AO classification is not suitable for children
    ADULTS_RATINGNEWZEALANDTELEVISIONTYPE
)

func (i RatingNewZealandTelevisionType) String() string {
    return []string{"allAllowed", "allBlocked", "general", "parentalGuidance", "adults"}[i]
}
func ParseRatingNewZealandTelevisionType(v string) (any, error) {
    result := ALLALLOWED_RATINGNEWZEALANDTELEVISIONTYPE
    switch v {
        case "allAllowed":
            result = ALLALLOWED_RATINGNEWZEALANDTELEVISIONTYPE
        case "allBlocked":
            result = ALLBLOCKED_RATINGNEWZEALANDTELEVISIONTYPE
        case "general":
            result = GENERAL_RATINGNEWZEALANDTELEVISIONTYPE
        case "parentalGuidance":
            result = PARENTALGUIDANCE_RATINGNEWZEALANDTELEVISIONTYPE
        case "adults":
            result = ADULTS_RATINGNEWZEALANDTELEVISIONTYPE
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeRatingNewZealandTelevisionType(values []RatingNewZealandTelevisionType) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i RatingNewZealandTelevisionType) isMultiValue() bool {
    return false
}
