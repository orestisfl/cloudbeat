// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type DeviceMetadata struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // Optional. The general type of the device (for example, 'Managed', 'Unmanaged').
    deviceType *string
    // The Internet Protocol (IP) address of the device.
    ipAddress *string
    // The OdataType property
    odataType *string
    // Details about the operating system platform and version.
    operatingSystemSpecifications OperatingSystemSpecificationsable
}
// NewDeviceMetadata instantiates a new DeviceMetadata and sets the default values.
func NewDeviceMetadata()(*DeviceMetadata) {
    m := &DeviceMetadata{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateDeviceMetadataFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateDeviceMetadataFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewDeviceMetadata(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *DeviceMetadata) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetDeviceType gets the deviceType property value. Optional. The general type of the device (for example, 'Managed', 'Unmanaged').
// returns a *string when successful
func (m *DeviceMetadata) GetDeviceType()(*string) {
    return m.deviceType
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *DeviceMetadata) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["deviceType"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDeviceType(val)
        }
        return nil
    }
    res["ipAddress"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIpAddress(val)
        }
        return nil
    }
    res["@odata.type"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOdataType(val)
        }
        return nil
    }
    res["operatingSystemSpecifications"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateOperatingSystemSpecificationsFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOperatingSystemSpecifications(val.(OperatingSystemSpecificationsable))
        }
        return nil
    }
    return res
}
// GetIpAddress gets the ipAddress property value. The Internet Protocol (IP) address of the device.
// returns a *string when successful
func (m *DeviceMetadata) GetIpAddress()(*string) {
    return m.ipAddress
}
// GetOdataType gets the @odata.type property value. The OdataType property
// returns a *string when successful
func (m *DeviceMetadata) GetOdataType()(*string) {
    return m.odataType
}
// GetOperatingSystemSpecifications gets the operatingSystemSpecifications property value. Details about the operating system platform and version.
// returns a OperatingSystemSpecificationsable when successful
func (m *DeviceMetadata) GetOperatingSystemSpecifications()(OperatingSystemSpecificationsable) {
    return m.operatingSystemSpecifications
}
// Serialize serializes information the current object
func (m *DeviceMetadata) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteStringValue("deviceType", m.GetDeviceType())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("ipAddress", m.GetIpAddress())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("@odata.type", m.GetOdataType())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteObjectValue("operatingSystemSpecifications", m.GetOperatingSystemSpecifications())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *DeviceMetadata) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetDeviceType sets the deviceType property value. Optional. The general type of the device (for example, 'Managed', 'Unmanaged').
func (m *DeviceMetadata) SetDeviceType(value *string)() {
    m.deviceType = value
}
// SetIpAddress sets the ipAddress property value. The Internet Protocol (IP) address of the device.
func (m *DeviceMetadata) SetIpAddress(value *string)() {
    m.ipAddress = value
}
// SetOdataType sets the @odata.type property value. The OdataType property
func (m *DeviceMetadata) SetOdataType(value *string)() {
    m.odataType = value
}
// SetOperatingSystemSpecifications sets the operatingSystemSpecifications property value. Details about the operating system platform and version.
func (m *DeviceMetadata) SetOperatingSystemSpecifications(value OperatingSystemSpecificationsable)() {
    m.operatingSystemSpecifications = value
}
type DeviceMetadataable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetDeviceType()(*string)
    GetIpAddress()(*string)
    GetOdataType()(*string)
    GetOperatingSystemSpecifications()(OperatingSystemSpecificationsable)
    SetDeviceType(value *string)()
    SetIpAddress(value *string)()
    SetOdataType(value *string)()
    SetOperatingSystemSpecifications(value OperatingSystemSpecificationsable)()
}
