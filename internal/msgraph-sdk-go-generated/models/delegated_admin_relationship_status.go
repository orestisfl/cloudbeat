// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type DelegatedAdminRelationshipStatus int

const (
    ACTIVATING_DELEGATEDADMINRELATIONSHIPSTATUS DelegatedAdminRelationshipStatus = iota
    ACTIVE_DELEGATEDADMINRELATIONSHIPSTATUS
    APPROVALPENDING_DELEGATEDADMINRELATIONSHIPSTATUS
    APPROVED_DELEGATEDADMINRELATIONSHIPSTATUS
    CREATED_DELEGATEDADMINRELATIONSHIPSTATUS
    EXPIRED_DELEGATEDADMINRELATIONSHIPSTATUS
    EXPIRING_DELEGATEDADMINRELATIONSHIPSTATUS
    TERMINATED_DELEGATEDADMINRELATIONSHIPSTATUS
    TERMINATING_DELEGATEDADMINRELATIONSHIPSTATUS
    TERMINATIONREQUESTED_DELEGATEDADMINRELATIONSHIPSTATUS
    UNKNOWNFUTUREVALUE_DELEGATEDADMINRELATIONSHIPSTATUS
)

func (i DelegatedAdminRelationshipStatus) String() string {
    return []string{"activating", "active", "approvalPending", "approved", "created", "expired", "expiring", "terminated", "terminating", "terminationRequested", "unknownFutureValue"}[i]
}
func ParseDelegatedAdminRelationshipStatus(v string) (any, error) {
    result := ACTIVATING_DELEGATEDADMINRELATIONSHIPSTATUS
    switch v {
        case "activating":
            result = ACTIVATING_DELEGATEDADMINRELATIONSHIPSTATUS
        case "active":
            result = ACTIVE_DELEGATEDADMINRELATIONSHIPSTATUS
        case "approvalPending":
            result = APPROVALPENDING_DELEGATEDADMINRELATIONSHIPSTATUS
        case "approved":
            result = APPROVED_DELEGATEDADMINRELATIONSHIPSTATUS
        case "created":
            result = CREATED_DELEGATEDADMINRELATIONSHIPSTATUS
        case "expired":
            result = EXPIRED_DELEGATEDADMINRELATIONSHIPSTATUS
        case "expiring":
            result = EXPIRING_DELEGATEDADMINRELATIONSHIPSTATUS
        case "terminated":
            result = TERMINATED_DELEGATEDADMINRELATIONSHIPSTATUS
        case "terminating":
            result = TERMINATING_DELEGATEDADMINRELATIONSHIPSTATUS
        case "terminationRequested":
            result = TERMINATIONREQUESTED_DELEGATEDADMINRELATIONSHIPSTATUS
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_DELEGATEDADMINRELATIONSHIPSTATUS
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeDelegatedAdminRelationshipStatus(values []DelegatedAdminRelationshipStatus) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i DelegatedAdminRelationshipStatus) isMultiValue() bool {
    return false
}
